{
  "comments": [
    {
      "key": {
        "uuid": "4d52cb32_f5f2d5b5",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1016147
      },
      "writtenOn": "2019-05-08T16:43:45Z",
      "side": 1,
      "message": "Not sure why this was called wifi_interface, but this really should be:\n\nget_interface_ipaddr(self, iface)",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c57b6b51_1cc141de",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1016165
      },
      "writtenOn": "2019-05-09T16:00:51Z",
      "side": 1,
      "message": "I can change this but it will affect the existing wifi testcases.",
      "parentUuid": "4d52cb32_f5f2d5b5",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1fd06ae_a172589c",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1016147
      },
      "writtenOn": "2019-05-09T20:17:34Z",
      "side": 1,
      "message": "All the function names would need to be updated.",
      "parentUuid": "c57b6b51_1cc141de",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f219aa29_d36aaa06",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1016163
      },
      "writtenOn": "2019-05-13T15:12:57Z",
      "side": 1,
      "message": "could you wrap this in a get_interface_ipaddr(self, iface) (or vice-versa)?",
      "parentUuid": "a1fd06ae_a172589c",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6b89d96_75269d0c",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1016147
      },
      "writtenOn": "2019-05-14T21:28:26Z",
      "side": 1,
      "message": "She did that and it looked OK",
      "parentUuid": "f219aa29_d36aaa06",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a49e5e7_8452070a",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1016147
      },
      "writtenOn": "2019-05-08T16:20:09Z",
      "side": 1,
      "message": "So in normal boardfarm devices we have \n\nget_interface_ipaddr() and get_interface_ip6addr()\n\nHere we have get_ip() and you\u0027re adding get_cnr_ip6addr()\n\nWhat exactly is going on?",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92fd2a32_360f6608",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1016165
      },
      "writtenOn": "2019-05-08T16:30:55Z",
      "side": 1,
      "message": "I don\u0027t think it is generic to get all ip\u0027s of the windows device as it requires to grep some specific characters to get ipv6 of cnr(more than one ipv6 present in the output) ..so named the function as get_cnr_ip6addr()",
      "parentUuid": "6a49e5e7_8452070a",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "336d38cd_642ba0bb",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1016147
      },
      "writtenOn": "2019-05-08T16:43:45Z",
      "side": 1,
      "message": "I know why you named it, but why not follow the API for other places?\n\nget_interface_ipaddr() and get_interface_ip6addr() would be useful for ALL devices that are based on this class.\n\nget_cnr_ip6addr is not - in fact it\u0027s specific to another device in another repo and not generally useful for a \"windows telnet\" device.",
      "parentUuid": "92fd2a32_360f6608",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55c5dfa2_e3b16f74",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1016165
      },
      "writtenOn": "2019-05-09T16:00:51Z",
      "side": 1,
      "message": "I will change the function name",
      "parentUuid": "336d38cd_642ba0bb",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c650e7f_239bc37e",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1016147
      },
      "writtenOn": "2019-05-09T20:17:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "55c5dfa2_e3b16f74",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a18614bc_fb5342a3",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1016147
      },
      "writtenOn": "2019-05-17T16:36:28Z",
      "side": 1,
      "message": "If I run this, it does back to normal after I exit telnet right?\n\nIf that\u0027s the case, maybe we can run it all the time.",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70a2e355_34e65a65",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1016147
      },
      "writtenOn": "2019-05-08T16:43:45Z",
      "side": 1,
      "message": "Shouldn\u0027t you use an IP regex helper here instead of this?",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "732d2ce8_cddedc4b",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1016165
      },
      "writtenOn": "2019-05-09T16:00:51Z",
      "side": 1,
      "message": "C:\\Users\\cbn\u003enetsh interface ipv6 show  addresses\n\nInterface 1: Loopback Pseudo-Interface 1\n\nAddr Type  DAD State   Valid Life Pref. Life Address\n---------  ----------- ---------- ---------- ------------------------\nOther      Preferred     infinite   infinite ::1\n\nInterface 11: ????\n\nAddr Type  DAD State   Valid Life Pref. Life Address\n---------  ----------- ---------- ---------- ------------------------\nManual     Preferred     infinite   infinite 2001:d030:701d:100::2\nManual     Preferred     infinite   infinite 2002:db50:fa13:1::2\nDhcp       Preferred    23h58m56s  23h57m56s 2002:db50:fa13:1:34:1d7f:fa11:f36c\nOther      Preferred     infinite   infinite fe80::8402:2ea4:7cfb:3f25%11\n\nInterface 12: Teredo Tunneling Pseudo-Interface\n\nAddr Type  DAD State   Valid Life Pref. Life Address\n---------  ----------- ---------- ---------- ------------------------\nOther      Deprecated    infinite   infinite fe80::100:7f:fffe%12\n\nInterface 13: isatap.{0DF93EE2-3A8E-4AAC-B246-99A1B76B64E5}\n\nAddr Type  DAD State   Valid Life Pref. Life Address\n---------  ----------- ---------- ---------- ------------------------\nOther      Deprecated    infinite   infinite fe80::5efe:172.16.1.2%13\n\n\nC:\\Users\\cbn\u003e\n\n\nI need 2002:db50:fa13:1::2 to test , that\u0027s why I used  regex re.search(\u0027Manual\\s+Preferred\\s+infinite\\s+infinite\\s+(2002\\S+)\u0027\nPlease suggest me if you have any idea how can I make it generic here.",
      "parentUuid": "70a2e355_34e65a65",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72dd37bb_9e154ff1",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1016147
      },
      "writtenOn": "2019-05-09T20:17:34Z",
      "side": 1,
      "message": "Well first off you can use tests/lib/regex.py: ValidIpv6AddressRegex or AllValidIpv6AddressesRegex\n\nSecondly, why are you assuming an address is prefixed with 2002? It could be any old address.",
      "parentUuid": "732d2ce8_cddedc4b",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef3cfac9_60502638",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1016165
      },
      "writtenOn": "2019-05-09T20:43:14Z",
      "side": 1,
      "message": "Correct it can be any but here I see multiple ipv6 address(see the output). I\u0027m not getting the expected ipv6 when I use regex.py",
      "parentUuid": "72dd37bb_9e154ff1",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "248dcea7_e93e7b79",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1016147
      },
      "writtenOn": "2019-05-09T20:46:05Z",
      "side": 1,
      "message": "I\u0027m not even sure what these addresses are for, but you have to figure out how to get the one you want. Maybe that logic can live in the test, and this can just return the ipv6 address(es)?\n\nEither way, these values represent something... static and dhcp addresses. We can\u0027t filter off 2001- that won\u0027t work most other places..\n\nWorst case we can do something like that in in a test specific to someone, but not here in the generic WindowsTelnet class. This should just return ipv6 addresses.\n\n-M",
      "parentUuid": "ef3cfac9_60502638",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "901788dc_7aeba984",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1016165
      },
      "writtenOn": "2019-05-13T07:58:33Z",
      "side": 1,
      "message": "I have tried a generic function to get ipv6 of windows machine but again it requires regex inside the script to get particular ipv6 of cisco cnr. So I don\u0027t think it would be a generic one for all 3 labs.\ndef get_interface_ip6addr(self):\n        ipv6address \u003d []\n        self.sendline(\"netsh interface ipv6 show addresses\")\n        self.expect(self.prompt)\n        match \u003d re.findall(AllValidIpv6AddressesRegex, self.before)\n        for ip in match:\n            ipv6addr \u003d ipaddress.IPv6Address(unicode(ip))\n            if not ipv6addr.is_link_local:\n                ipv6address.append(ipv6addr)\n        return ipv6address\n\n\nScript Usage:\ncnr_ipv6 \u003d re.search(\"2002\\:.*\\:\\:\\d\", str(provisioner.get_cnr_ip6addr()))\ncnr_ipv6 \u003d cnr_ipv6.group()\n\nIf I use the same script for any other lab it wont work, So I feel the IP can be added inside the JSON",
      "parentUuid": "248dcea7_e93e7b79",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df1e93ae_f68180ca",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1016147
      },
      "writtenOn": "2019-05-14T21:28:26Z",
      "side": 1,
      "message": "I commented on the other changes where you added this function.\n\nI think you\u0027ve yet to explain why you need the 2002 address. Is this\n\n2002:db50:fa13:1::2\n\nA syslog and tftpserver? The idea is that the SAME script WILL work in any lab.",
      "parentUuid": "901788dc_7aeba984",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32c0e3ea_0fc283ec",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1016147
      },
      "writtenOn": "2019-05-08T16:20:09Z",
      "side": 1,
      "message": "What if the language is not chinese? Can we check the current lang and set it back to that value when done?\n\nWhy don\u0027t the other functions do this? Do they ignore chinese chars?",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5f7ec72_05a0fd78",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1016165
      },
      "writtenOn": "2019-05-08T16:30:55Z",
      "side": 1,
      "message": "I thought it won\u0027t change so added default.. anyway i will do it as generic. Other functions might not require any grep for characters, so they haven\u0027t added .",
      "parentUuid": "32c0e3ea_0fc283ec",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13fdae35_b3168fc3",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1016147
      },
      "writtenOn": "2019-05-08T16:43:45Z",
      "side": 1,
      "message": "but I don\u0027t see a grep in your commit?",
      "parentUuid": "b5f7ec72_05a0fd78",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "454eac4a_f01998d8",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1016165
      },
      "writtenOn": "2019-05-09T16:00:51Z",
      "side": 1,
      "message": "No issues here, I will get the language and set it back",
      "parentUuid": "13fdae35_b3168fc3",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3638428_083d8219",
        "filename": "devices/windows_telnet.py",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1016147
      },
      "writtenOn": "2019-05-09T20:17:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "454eac4a_f01998d8",
      "revId": "209817a3370da354a2756633170b83c8690fc9dc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}